
2021-10-23 19:04:19.589146: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
[32m[10/23 19:04:18 d2.engine.defaults]: [39mModel:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=4, bias=True)
    )
  )
)
[32m[10/23 19:04:18 d2.data.build]: [39mRemoved 0 images with no usable annotations. 559 images left.
[32m[10/23 19:04:18 d2.data.build]: [39mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
[36m|:----------:|:-------------|
[36m|    Car     | 559          |
[36m|            |              |
[32m[10/23 19:04:18 d2.data.dataset_mapper]: [39m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[10/23 19:04:18 d2.data.build]: [39mUsing training sampler TrainingSampler
[32m[10/23 19:04:18 d2.data.common]: [39mSerializing 559 elements to byte tensors and concatenating them all ...
[32m[10/23 19:04:18 d2.data.common]: [39mSerialized dataset takes 0.19 MiB
[32m[10/23 19:04:25 d2.engine.train_loop]: [39mStarting training from iteration 0
Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 2048) in the checkpoint but (2, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (2,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 2048) in the checkpoint but (4, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}
[34mroi_heads.box_predictor.cls_score.{bias, weight}
The checkpoint state_dict contains keys that are not used by the model:
  [35mproposal_generator.anchor_generator.cell_anchors.0
[32m[10/23 19:04:33 d2.utils.events]: [39m eta: 0:07:17  iter: 19  total_loss: 1.025  loss_cls: 0.5924  loss_box_reg: 0.4166  loss_rpn_cls: 0.01046  loss_rpn_loc: 0.005125  time: 0.3620  data_time: 0.0204  lr: 4.9953e-06  max_mem: 2151M
[32m[10/23 19:04:49 d2.utils.events]: [39m eta: 0:07:22  iter: 39  total_loss: 0.9842  loss_cls: 0.5384  loss_box_reg: 0.4123  loss_rpn_cls: 0.009722  loss_rpn_loc: 0.005249  time: 0.5922  data_time: 0.0064  lr: 9.9902e-06  max_mem: 2151M
[32m[10/23 19:04:58 d2.utils.events]: [39m eta: 0:07:38  iter: 59  total_loss: 0.8653  loss_cls: 0.4577  loss_box_reg: 0.4048  loss_rpn_cls: 0.009437  loss_rpn_loc: 0.006731  time: 0.5391  data_time: 0.0045  lr: 1.4985e-05  max_mem: 2151M
[32m[10/23 19:05:06 d2.utils.events]: [39m eta: 0:07:32  iter: 79  total_loss: 0.774  loss_cls: 0.3547  loss_box_reg: 0.4019  loss_rpn_cls: 0.007994  loss_rpn_loc: 0.005665  time: 0.4996  data_time: 0.0029  lr: 1.998e-05  max_mem: 2151M
[32m[10/23 19:05:13 d2.utils.events]: [39m eta: 0:07:27  iter: 99  total_loss: 0.7634  loss_cls: 0.3095  loss_box_reg: 0.4671  loss_rpn_cls: 0.008056  loss_rpn_loc: 0.005335  time: 0.4768  data_time: 0.0028  lr: 2.4975e-05  max_mem: 2151M
[32m[10/23 19:05:21 d2.utils.events]: [39m eta: 0:07:18  iter: 119  total_loss: 0.7074  loss_cls: 0.2572  loss_box_reg: 0.4438  loss_rpn_cls: 0.008379  loss_rpn_loc: 0.004732  time: 0.4609  data_time: 0.0029  lr: 2.997e-05  max_mem: 2151M
[32m[10/23 19:05:29 d2.utils.events]: [39m eta: 0:07:09  iter: 139  total_loss: 0.6197  loss_cls: 0.2172  loss_box_reg: 0.393  loss_rpn_cls: 0.007797  loss_rpn_loc: 0.00609  time: 0.4492  data_time: 0.0030  lr: 3.4965e-05  max_mem: 2151M
[32m[10/23 19:05:36 d2.utils.events]: [39m eta: 0:07:01  iter: 159  total_loss: 0.6358  loss_cls: 0.1892  loss_box_reg: 0.4251  loss_rpn_cls: 0.007872  loss_rpn_loc: 0.003898  time: 0.4410  data_time: 0.0028  lr: 3.996e-05  max_mem: 2151M
[32m[10/23 19:05:44 d2.utils.events]: [39m eta: 0:06:54  iter: 179  total_loss: 0.5856  loss_cls: 0.1687  loss_box_reg: 0.3996  loss_rpn_cls: 0.005403  loss_rpn_loc: 0.003264  time: 0.4345  data_time: 0.0027  lr: 4.4955e-05  max_mem: 2151M
[32m[10/23 19:05:52 d2.utils.events]: [39m eta: 0:06:47  iter: 199  total_loss: 0.6606  loss_cls: 0.1787  loss_box_reg: 0.4561  loss_rpn_cls: 0.01327  loss_rpn_loc: 0.004118  time: 0.4301  data_time: 0.0030  lr: 4.995e-05  max_mem: 2151M
[32m[10/23 19:06:00 d2.utils.events]: [39m eta: 0:06:40  iter: 219  total_loss: 0.6309  loss_cls: 0.1606  loss_box_reg: 0.4567  loss_rpn_cls: 0.006306  loss_rpn_loc: 0.004687  time: 0.4267  data_time: 0.0029  lr: 5.4945e-05  max_mem: 2151M
[32m[10/23 19:06:07 d2.utils.events]: [39m eta: 0:06:32  iter: 239  total_loss: 0.5677  loss_cls: 0.1411  loss_box_reg: 0.4153  loss_rpn_cls: 0.004884  loss_rpn_loc: 0.00371  time: 0.4229  data_time: 0.0028  lr: 5.994e-05  max_mem: 2151M
[32m[10/23 19:06:15 d2.utils.events]: [39m eta: 0:06:24  iter: 259  total_loss: 0.5589  loss_cls: 0.1261  loss_box_reg: 0.4393  loss_rpn_cls: 0.006705  loss_rpn_loc: 0.003047  time: 0.4203  data_time: 0.0031  lr: 6.4935e-05  max_mem: 2151M
[32m[10/23 19:06:23 d2.utils.events]: [39m eta: 0:06:17  iter: 279  total_loss: 0.4977  loss_cls: 0.1138  loss_box_reg: 0.3839  loss_rpn_cls: 0.009827  loss_rpn_loc: 0.00309  time: 0.4179  data_time: 0.0032  lr: 6.993e-05  max_mem: 2151M
[32m[10/23 19:06:31 d2.utils.events]: [39m eta: 0:06:09  iter: 299  total_loss: 0.532  loss_cls: 0.1113  loss_box_reg: 0.4265  loss_rpn_cls: 0.007306  loss_rpn_loc: 0.002514  time: 0.4151  data_time: 0.0029  lr: 7.4925e-05  max_mem: 2151M
[32m[10/23 19:06:38 d2.utils.events]: [39m eta: 0:06:01  iter: 319  total_loss: 0.4552  loss_cls: 0.1004  loss_box_reg: 0.3393  loss_rpn_cls: 0.00534  loss_rpn_loc: 0.003203  time: 0.4130  data_time: 0.0028  lr: 7.992e-05  max_mem: 2151M
[32m[10/23 19:06:46 d2.utils.events]: [39m eta: 0:05:53  iter: 339  total_loss: 0.4594  loss_cls: 0.07757  loss_box_reg: 0.3726  loss_rpn_cls: 0.003043  loss_rpn_loc: 0.003455  time: 0.4111  data_time: 0.0027  lr: 8.4915e-05  max_mem: 2151M
[32m[10/23 19:06:53 d2.utils.events]: [39m eta: 0:05:44  iter: 359  total_loss: 0.5216  loss_cls: 0.09533  loss_box_reg: 0.4006  loss_rpn_cls: 0.004541  loss_rpn_loc: 0.003762  time: 0.4081  data_time: 0.0028  lr: 8.991e-05  max_mem: 2151M
[32m[10/23 19:07:01 d2.utils.events]: [39m eta: 0:05:37  iter: 379  total_loss: 0.4588  loss_cls: 0.08854  loss_box_reg: 0.3727  loss_rpn_cls: 0.007738  loss_rpn_loc: 0.002998  time: 0.4071  data_time: 0.0038  lr: 9.4905e-05  max_mem: 2151M
[32m[10/23 19:07:09 d2.utils.events]: [39m eta: 0:05:29  iter: 399  total_loss: 0.4391  loss_cls: 0.07789  loss_box_reg: 0.3807  loss_rpn_cls: 0.003523  loss_rpn_loc: 0.002699  time: 0.4062  data_time: 0.0036  lr: 9.99e-05  max_mem: 2151M
[32m[10/23 19:07:17 d2.utils.events]: [39m eta: 0:05:22  iter: 419  total_loss: 0.4439  loss_cls: 0.05882  loss_box_reg: 0.3587  loss_rpn_cls: 0.0069  loss_rpn_loc: 0.004258  time: 0.4058  data_time: 0.0030  lr: 0.0001049  max_mem: 2151M
[32m[10/23 19:07:24 d2.utils.events]: [39m eta: 0:05:14  iter: 439  total_loss: 0.4255  loss_cls: 0.06989  loss_box_reg: 0.3412  loss_rpn_cls: 0.005888  loss_rpn_loc: 0.002794  time: 0.4052  data_time: 0.0030  lr: 0.00010989  max_mem: 2151M
[32m[10/23 19:07:32 d2.utils.events]: [39m eta: 0:05:06  iter: 459  total_loss: 0.3842  loss_cls: 0.06286  loss_box_reg: 0.3024  loss_rpn_cls: 0.003004  loss_rpn_loc: 0.002603  time: 0.4044  data_time: 0.0027  lr: 0.00011489  max_mem: 2151M
[32m[10/23 19:07:40 d2.utils.events]: [39m eta: 0:04:59  iter: 479  total_loss: 0.3824  loss_cls: 0.06435  loss_box_reg: 0.3031  loss_rpn_cls: 0.005357  loss_rpn_loc: 0.003622  time: 0.4038  data_time: 0.0029  lr: 0.00011988  max_mem: 2151M
[32m[10/23 19:07:52 d2.utils.events]: [39m eta: 0:04:51  iter: 499  total_loss: 0.3373  loss_cls: 0.0742  loss_box_reg: 0.2517  loss_rpn_cls: 0.005099  loss_rpn_loc: 0.00237  time: 0.4126  data_time: 0.0116  lr: 0.00012488  max_mem: 2151M
[32m[10/23 19:08:07 d2.utils.events]: [39m eta: 0:04:44  iter: 519  total_loss: 0.3166  loss_cls: 0.0541  loss_box_reg: 0.245  loss_rpn_cls: 0.003555  loss_rpn_loc: 0.003387  time: 0.4240  data_time: 0.0159  lr: 0.00012987  max_mem: 2151M
[32m[10/23 19:08:16 d2.utils.events]: [39m eta: 0:04:36  iter: 539  total_loss: 0.2714  loss_cls: 0.07055  loss_box_reg: 0.2016  loss_rpn_cls: 0.002973  loss_rpn_loc: 0.002948  time: 0.4261  data_time: 0.0080  lr: 0.00013487  max_mem: 2151M
[32m[10/23 19:08:24 d2.utils.events]: [39m eta: 0:04:28  iter: 559  total_loss: 0.2759  loss_cls: 0.04535  loss_box_reg: 0.2176  loss_rpn_cls: 0.001845  loss_rpn_loc: 0.003142  time: 0.4239  data_time: 0.0030  lr: 0.00013986  max_mem: 2151M
[32m[10/23 19:08:31 d2.utils.events]: [39m eta: 0:04:20  iter: 579  total_loss: 0.2696  loss_cls: 0.05856  loss_box_reg: 0.1904  loss_rpn_cls: 0.00403  loss_rpn_loc: 0.002589  time: 0.4218  data_time: 0.0027  lr: 0.00014486  max_mem: 2151M
[32m[10/23 19:08:38 d2.utils.events]: [39m eta: 0:04:11  iter: 599  total_loss: 0.2411  loss_cls: 0.04945  loss_box_reg: 0.1814  loss_rpn_cls: 0.003856  loss_rpn_loc: 0.003289  time: 0.4199  data_time: 0.0028  lr: 0.00014985  max_mem: 2151M
[32m[10/23 19:08:45 d2.utils.events]: [39m eta: 0:04:03  iter: 619  total_loss: 0.2346  loss_cls: 0.0592  loss_box_reg: 0.1767  loss_rpn_cls: 0.004685  loss_rpn_loc: 0.002991  time: 0.4178  data_time: 0.0028  lr: 0.00015485  max_mem: 2151M
[32m[10/23 19:08:53 d2.utils.events]: [39m eta: 0:03:55  iter: 639  total_loss: 0.2447  loss_cls: 0.05157  loss_box_reg: 0.1698  loss_rpn_cls: 0.003457  loss_rpn_loc: 0.003276  time: 0.4162  data_time: 0.0028  lr: 0.00015984  max_mem: 2151M
[32m[10/23 19:09:00 d2.utils.events]: [39m eta: 0:03:47  iter: 659  total_loss: 0.267  loss_cls: 0.04883  loss_box_reg: 0.1935  loss_rpn_cls: 0.004147  loss_rpn_loc: 0.002736  time: 0.4147  data_time: 0.0027  lr: 0.00016484  max_mem: 2151M
[32m[10/23 19:09:07 d2.utils.events]: [39m eta: 0:03:40  iter: 679  total_loss: 0.2389  loss_cls: 0.04571  loss_box_reg: 0.1904  loss_rpn_cls: 0.002477  loss_rpn_loc: 0.002313  time: 0.4134  data_time: 0.0032  lr: 0.00016983  max_mem: 2151M
[32m[10/23 19:09:15 d2.utils.events]: [39m eta: 0:03:32  iter: 699  total_loss: 0.2731  loss_cls: 0.07032  loss_box_reg: 0.1946  loss_rpn_cls: 0.001736  loss_rpn_loc: 0.002904  time: 0.4121  data_time: 0.0027  lr: 0.00017483  max_mem: 2151M
[32m[10/23 19:09:22 d2.utils.events]: [39m eta: 0:03:24  iter: 719  total_loss: 0.2365  loss_cls: 0.06757  loss_box_reg: 0.1751  loss_rpn_cls: 0.001774  loss_rpn_loc: 0.00285  time: 0.4108  data_time: 0.0027  lr: 0.00017982  max_mem: 2151M
[32m[10/23 19:09:32 d2.utils.events]: [39m eta: 0:03:16  iter: 739  total_loss: 0.2408  loss_cls: 0.05072  loss_box_reg: 0.178  loss_rpn_cls: 0.002405  loss_rpn_loc: 0.002355  time: 0.4133  data_time: 0.0077  lr: 0.00018482  max_mem: 2151M
[32m[10/23 19:09:40 d2.utils.events]: [39m eta: 0:03:08  iter: 759  total_loss: 0.2417  loss_cls: 0.0465  loss_box_reg: 0.1811  loss_rpn_cls: 0.002913  loss_rpn_loc: 0.003118  time: 0.4132  data_time: 0.0045  lr: 0.00018981  max_mem: 2151M
[32m[10/23 19:09:48 d2.utils.events]: [39m eta: 0:03:00  iter: 779  total_loss: 0.2303  loss_cls: 0.04602  loss_box_reg: 0.1782  loss_rpn_cls: 0.003828  loss_rpn_loc: 0.002307  time: 0.4119  data_time: 0.0029  lr: 0.00019481  max_mem: 2151M
[32m[10/23 19:09:55 d2.utils.events]: [39m eta: 0:02:52  iter: 799  total_loss: 0.3018  loss_cls: 0.05186  loss_box_reg: 0.2155  loss_rpn_cls: 0.002085  loss_rpn_loc: 0.002847  time: 0.4106  data_time: 0.0029  lr: 0.0001998  max_mem: 2151M
[32m[10/23 19:10:02 d2.utils.events]: [39m eta: 0:02:44  iter: 819  total_loss: 0.2166  loss_cls: 0.04491  loss_box_reg: 0.1842  loss_rpn_cls: 0.002278  loss_rpn_loc: 0.002392  time: 0.4094  data_time: 0.0027  lr: 0.0002048  max_mem: 2151M
[32m[10/23 19:10:09 d2.utils.events]: [39m eta: 0:02:36  iter: 839  total_loss: 0.272  loss_cls: 0.05862  loss_box_reg: 0.1884  loss_rpn_cls: 0.005394  loss_rpn_loc: 0.002979  time: 0.4083  data_time: 0.0034  lr: 0.00020979  max_mem: 2151M
[32m[10/23 19:10:17 d2.utils.events]: [39m eta: 0:02:28  iter: 859  total_loss: 0.2283  loss_cls: 0.05115  loss_box_reg: 0.1707  loss_rpn_cls: 0.002382  loss_rpn_loc: 0.003039  time: 0.4074  data_time: 0.0029  lr: 0.00021479  max_mem: 2151M
[32m[10/23 19:10:24 d2.utils.events]: [39m eta: 0:02:20  iter: 879  total_loss: 0.2318  loss_cls: 0.03733  loss_box_reg: 0.1742  loss_rpn_cls: 0.00281  loss_rpn_loc: 0.002503  time: 0.4063  data_time: 0.0030  lr: 0.00021978  max_mem: 2151M
[32m[10/23 19:10:31 d2.utils.events]: [39m eta: 0:02:12  iter: 899  total_loss: 0.247  loss_cls: 0.04562  loss_box_reg: 0.1695  loss_rpn_cls: 0.00642  loss_rpn_loc: 0.003055  time: 0.4054  data_time: 0.0029  lr: 0.00022478  max_mem: 2151M
[32m[10/23 19:10:39 d2.utils.events]: [39m eta: 0:02:04  iter: 919  total_loss: 0.2657  loss_cls: 0.05724  loss_box_reg: 0.1858  loss_rpn_cls: 0.002412  loss_rpn_loc: 0.002736  time: 0.4045  data_time: 0.0029  lr: 0.00022977  max_mem: 2151M
[32m[10/23 19:10:46 d2.utils.events]: [39m eta: 0:01:56  iter: 939  total_loss: 0.2407  loss_cls: 0.05929  loss_box_reg: 0.1743  loss_rpn_cls: 0.002536  loss_rpn_loc: 0.002365  time: 0.4036  data_time: 0.0030  lr: 0.00023477  max_mem: 2151M
[32m[10/23 19:10:53 d2.utils.events]: [39m eta: 0:01:49  iter: 959  total_loss: 0.2629  loss_cls: 0.04962  loss_box_reg: 0.2009  loss_rpn_cls: 0.003445  loss_rpn_loc: 0.003374  time: 0.4028  data_time: 0.0027  lr: 0.00023976  max_mem: 2151M
[32m[10/23 19:11:00 d2.utils.events]: [39m eta: 0:01:41  iter: 979  total_loss: 0.2389  loss_cls: 0.0488  loss_box_reg: 0.1525  loss_rpn_cls: 0.005134  loss_rpn_loc: 0.002248  time: 0.4020  data_time: 0.0030  lr: 0.00024476  max_mem: 2151M
[32m[10/23 19:11:09 d2.utils.events]: [39m eta: 0:01:34  iter: 999  total_loss: 0.259  loss_cls: 0.06488  loss_box_reg: 0.1596  loss_rpn_cls: 0.002511  loss_rpn_loc: 0.001994  time: 0.4028  data_time: 0.0043  lr: 0.00024975  max_mem: 2151M
[32m[10/23 19:11:20 d2.utils.events]: [39m eta: 0:01:26  iter: 1019  total_loss: 0.2402  loss_cls: 0.04871  loss_box_reg: 0.1751  loss_rpn_cls: 0.001364  loss_rpn_loc: 0.00226  time: 0.4055  data_time: 0.0100  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:11:46 d2.utils.events]: [39m eta: 0:01:19  iter: 1039  total_loss: 0.2628  loss_cls: 0.05935  loss_box_reg: 0.1817  loss_rpn_cls: 0.004085  loss_rpn_loc: 0.003631  time: 0.4225  data_time: 0.0083  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:11:54 d2.utils.events]: [39m eta: 0:01:11  iter: 1059  total_loss: 0.2433  loss_cls: 0.05219  loss_box_reg: 0.1701  loss_rpn_cls: 0.001936  loss_rpn_loc: 0.002216  time: 0.4218  data_time: 0.0039  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:00 d2.utils.events]: [39m eta: 0:01:03  iter: 1079  total_loss: 0.2274  loss_cls: 0.05151  loss_box_reg: 0.1647  loss_rpn_cls: 0.001299  loss_rpn_loc: 0.002691  time: 0.4203  data_time: 0.0026  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:07 d2.utils.events]: [39m eta: 0:00:56  iter: 1099  total_loss: 0.2421  loss_cls: 0.0466  loss_box_reg: 0.1749  loss_rpn_cls: 0.001373  loss_rpn_loc: 0.002584  time: 0.4190  data_time: 0.0026  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:14 d2.utils.events]: [39m eta: 0:00:48  iter: 1119  total_loss: 0.2311  loss_cls: 0.04897  loss_box_reg: 0.1745  loss_rpn_cls: 0.001599  loss_rpn_loc: 0.002874  time: 0.4177  data_time: 0.0027  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:21 d2.utils.events]: [39m eta: 0:00:41  iter: 1139  total_loss: 0.2287  loss_cls: 0.05425  loss_box_reg: 0.1687  loss_rpn_cls: 0.001102  loss_rpn_loc: 0.001986  time: 0.4164  data_time: 0.0025  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:28 d2.utils.events]: [39m eta: 0:00:33  iter: 1159  total_loss: 0.2365  loss_cls: 0.04305  loss_box_reg: 0.1752  loss_rpn_cls: 0.0009858  loss_rpn_loc: 0.00264  time: 0.4151  data_time: 0.0025  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:35 d2.utils.events]: [39m eta: 0:00:25  iter: 1179  total_loss: 0.2502  loss_cls: 0.06444  loss_box_reg: 0.1699  loss_rpn_cls: 0.001399  loss_rpn_loc: 0.002387  time: 0.4139  data_time: 0.0027  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:42 d2.utils.events]: [39m eta: 0:00:18  iter: 1199  total_loss: 0.2531  loss_cls: 0.04298  loss_box_reg: 0.1836  loss_rpn_cls: 0.004775  loss_rpn_loc: 0.002671  time: 0.4127  data_time: 0.0027  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:49 d2.utils.events]: [39m eta: 0:00:11  iter: 1219  total_loss: 0.2146  loss_cls: 0.04668  loss_box_reg: 0.1744  loss_rpn_cls: 0.001668  loss_rpn_loc: 0.002128  time: 0.4116  data_time: 0.0028  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:56 d2.utils.events]: [39m eta: 0:00:03  iter: 1239  total_loss: 0.2706  loss_cls: 0.06113  loss_box_reg: 0.1628  loss_rpn_cls: 0.003464  loss_rpn_loc: 0.003081  time: 0.4105  data_time: 0.0025  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:59 d2.utils.events]: [39m eta: 0:00:00  iter: 1249  total_loss: 0.252  loss_cls: 0.05995  loss_box_reg: 0.1776  loss_rpn_cls: 0.003198  loss_rpn_loc: 0.002786  time: 0.4100  data_time: 0.0025  lr: 0.00025  max_mem: 2151M
[32m[10/23 19:12:59 d2.engine.hooks]: [39mOverall training speed: 1248 iterations in 0:08:31 (0.4100 s / it)
[32m[10/23 19:12:59 d2.engine.hooks]: [39mTotal training time: 0:08:32 (0:00:00 on hooks)
[32m[10/23 19:13:00 d2.evaluation.coco_evaluation]: [39m'data' is not registered by `register_coco_instances`. Therefore trying to convert it to COCO format ...
[32m[10/23 19:13:00 d2.data.datasets.coco]: [39mConverting annotations of dataset 'data' to COCO format ...)
[32m[10/23 19:13:00 d2.data.datasets.coco]: [39mConverting dataset dicts into COCO format
[32m[10/23 19:13:00 d2.data.datasets.coco]: [39mConversion finished, #images: 559, #annotations: 559
[32m[10/23 19:13:00 d2.data.datasets.coco]: [39mCaching COCO format annotations at './output/data_coco_format.json' ...
[32m[10/23 19:13:00 d2.data.dataset_mapper]: [39m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[10/23 19:13:00 d2.data.common]: [39mSerializing 559 elements to byte tensors and concatenating them all ...
[32m[10/23 19:13:00 d2.data.common]: [39mSerialized dataset takes 0.19 MiB
[32m[10/23 19:13:00 d2.evaluation.evaluator]: [39mStart inference on 559 batches
Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 2048) in the checkpoint but (2, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (2,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 2048) in the checkpoint but (4, 2048) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}
[34mroi_heads.box_predictor.cls_score.{bias, weight}
The checkpoint state_dict contains keys that are not used by the model:
  [35mproposal_generator.anchor_generator.cell_anchors.0
[32m[10/23 19:13:03 d2.evaluation.evaluator]: [39mInference done 11/559. Dataloading: 0.0009 s/iter. Inference: 0.2226 s/iter. Eval: 0.0002 s/iter. Total: 0.2236 s/iter. ETA=0:02:02
[32m[10/23 19:13:09 d2.evaluation.evaluator]: [39mInference done 34/559. Dataloading: 0.0010 s/iter. Inference: 0.2244 s/iter. Eval: 0.0002 s/iter. Total: 0.2257 s/iter. ETA=0:01:58
[32m[10/23 19:13:14 d2.evaluation.evaluator]: [39mInference done 54/559. Dataloading: 0.0014 s/iter. Inference: 0.2416 s/iter. Eval: 0.0005 s/iter. Total: 0.2437 s/iter. ETA=0:02:03
[32m[10/23 19:13:20 d2.evaluation.evaluator]: [39mInference done 59/559. Dataloading: 0.0029 s/iter. Inference: 0.3257 s/iter. Eval: 0.0014 s/iter. Total: 0.3305 s/iter. ETA=0:02:45
[32m[10/23 19:13:27 d2.evaluation.evaluator]: [39mInference done 62/559. Dataloading: 0.0040 s/iter. Inference: 0.4265 s/iter. Eval: 0.0018 s/iter. Total: 0.4331 s/iter. ETA=0:03:35
[32m[10/23 19:13:32 d2.evaluation.evaluator]: [39mInference done 75/559. Dataloading: 0.0050 s/iter. Inference: 0.4257 s/iter. Eval: 0.0026 s/iter. Total: 0.4343 s/iter. ETA=0:03:30
[32m[10/23 19:13:38 d2.evaluation.evaluator]: [39mInference done 82/559. Dataloading: 0.0064 s/iter. Inference: 0.4521 s/iter. Eval: 0.0030 s/iter. Total: 0.4628 s/iter. ETA=0:03:40
[32m[10/23 19:13:43 d2.evaluation.evaluator]: [39mInference done 90/559. Dataloading: 0.0070 s/iter. Inference: 0.4706 s/iter. Eval: 0.0033 s/iter. Total: 0.4826 s/iter. ETA=0:03:46
[32m[10/23 19:13:48 d2.evaluation.evaluator]: [39mInference done 94/559. Dataloading: 0.0077 s/iter. Inference: 0.5079 s/iter. Eval: 0.0038 s/iter. Total: 0.5213 s/iter. ETA=0:04:02
[32m[10/23 19:13:53 d2.evaluation.evaluator]: [39mInference done 102/559. Dataloading: 0.0085 s/iter. Inference: 0.5153 s/iter. Eval: 0.0043 s/iter. Total: 0.5300 s/iter. ETA=0:04:02
[32m[10/23 19:13:59 d2.evaluation.evaluator]: [39mInference done 107/559. Dataloading: 0.0089 s/iter. Inference: 0.5392 s/iter. Eval: 0.0045 s/iter. Total: 0.5547 s/iter. ETA=0:04:10
[32m[10/23 19:14:04 d2.evaluation.evaluator]: [39mInference done 114/559. Dataloading: 0.0098 s/iter. Inference: 0.5493 s/iter. Eval: 0.0050 s/iter. Total: 0.5663 s/iter. ETA=0:04:12
[32m[10/23 19:14:09 d2.evaluation.evaluator]: [39mInference done 120/559. Dataloading: 0.0104 s/iter. Inference: 0.5665 s/iter. Eval: 0.0054 s/iter. Total: 0.5847 s/iter. ETA=0:04:16
[32m[10/23 19:14:14 d2.evaluation.evaluator]: [39mInference done 125/559. Dataloading: 0.0108 s/iter. Inference: 0.5850 s/iter. Eval: 0.0055 s/iter. Total: 0.6038 s/iter. ETA=0:04:22
[32m[10/23 19:14:20 d2.evaluation.evaluator]: [39mInference done 132/559. Dataloading: 0.0114 s/iter. Inference: 0.5943 s/iter. Eval: 0.0059 s/iter. Total: 0.6142 s/iter. ETA=0:04:22
[32m[10/23 19:14:26 d2.evaluation.evaluator]: [39mInference done 138/559. Dataloading: 0.0118 s/iter. Inference: 0.6084 s/iter. Eval: 0.0061 s/iter. Total: 0.6288 s/iter. ETA=0:04:24
[32m[10/23 19:14:31 d2.evaluation.evaluator]: [39mInference done 143/559. Dataloading: 0.0121 s/iter. Inference: 0.6246 s/iter. Eval: 0.0062 s/iter. Total: 0.6455 s/iter. ETA=0:04:28
[32m[10/23 19:14:37 d2.evaluation.evaluator]: [39mInference done 146/559. Dataloading: 0.0124 s/iter. Inference: 0.6557 s/iter. Eval: 0.0064 s/iter. Total: 0.6772 s/iter. ETA=0:04:39
[32m[10/23 19:14:43 d2.evaluation.evaluator]: [39mInference done 149/559. Dataloading: 0.0127 s/iter. Inference: 0.6813 s/iter. Eval: 0.0067 s/iter. Total: 0.7034 s/iter. ETA=0:04:48
[32m[10/23 19:14:49 d2.evaluation.evaluator]: [39mInference done 151/559. Dataloading: 0.0128 s/iter. Inference: 0.7086 s/iter. Eval: 0.0069 s/iter. Total: 0.7312 s/iter. ETA=0:04:58
[32m[10/23 19:14:55 d2.evaluation.evaluator]: [39mInference done 152/559. Dataloading: 0.0129 s/iter. Inference: 0.7471 s/iter. Eval: 0.0070 s/iter. Total: 0.7701 s/iter. ETA=0:05:13
[32m[10/23 19:15:00 d2.evaluation.evaluator]: [39mInference done 170/559. Dataloading: 0.0119 s/iter. Inference: 0.6959 s/iter. Eval: 0.0063 s/iter. Total: 0.7170 s/iter. ETA=0:04:38
[32m[10/23 19:15:05 d2.evaluation.evaluator]: [39mInference done 193/559. Dataloading: 0.0106 s/iter. Inference: 0.6375 s/iter. Eval: 0.0056 s/iter. Total: 0.6562 s/iter. ETA=0:04:00
[32m[10/23 19:15:11 d2.evaluation.evaluator]: [39mInference done 200/559. Dataloading: 0.0108 s/iter. Inference: 0.6420 s/iter. Eval: 0.0056 s/iter. Total: 0.6610 s/iter. ETA=0:03:57
[32m[10/23 19:15:16 d2.evaluation.evaluator]: [39mInference done 203/559. Dataloading: 0.0111 s/iter. Inference: 0.6586 s/iter. Eval: 0.0059 s/iter. Total: 0.6782 s/iter. ETA=0:04:01
[32m[10/23 19:15:21 d2.evaluation.evaluator]: [39mInference done 218/559. Dataloading: 0.0106 s/iter. Inference: 0.6362 s/iter. Eval: 0.0055 s/iter. Total: 0.6549 s/iter. ETA=0:03:43
[32m[10/23 19:15:27 d2.evaluation.evaluator]: [39mInference done 229/559. Dataloading: 0.0106 s/iter. Inference: 0.6309 s/iter. Eval: 0.0056 s/iter. Total: 0.6495 s/iter. ETA=0:03:34
[32m[10/23 19:15:33 d2.evaluation.evaluator]: [39mInference done 234/559. Dataloading: 0.0108 s/iter. Inference: 0.6416 s/iter. Eval: 0.0057 s/iter. Total: 0.6606 s/iter. ETA=0:03:34
[32m[10/23 19:15:39 d2.evaluation.evaluator]: [39mInference done 237/559. Dataloading: 0.0109 s/iter. Inference: 0.6575 s/iter. Eval: 0.0057 s/iter. Total: 0.6767 s/iter. ETA=0:03:37
[32m[10/23 19:15:45 d2.evaluation.evaluator]: [39mInference done 247/559. Dataloading: 0.0111 s/iter. Inference: 0.6531 s/iter. Eval: 0.0058 s/iter. Total: 0.6725 s/iter. ETA=0:03:29
[32m[10/23 19:15:52 d2.evaluation.evaluator]: [39mInference done 250/559. Dataloading: 0.0111 s/iter. Inference: 0.6730 s/iter. Eval: 0.0059 s/iter. Total: 0.6927 s/iter. ETA=0:03:34
[32m[10/23 19:15:57 d2.evaluation.evaluator]: [39mInference done 255/559. Dataloading: 0.0116 s/iter. Inference: 0.6798 s/iter. Eval: 0.0060 s/iter. Total: 0.7002 s/iter. ETA=0:03:32
[32m[10/23 19:16:13 d2.evaluation.evaluator]: [39mInference done 260/559. Dataloading: 0.0120 s/iter. Inference: 0.7006 s/iter. Eval: 0.0328 s/iter. Total: 0.7482 s/iter. ETA=0:03:43
[32m[10/23 19:16:18 d2.evaluation.evaluator]: [39mInference done 265/559. Dataloading: 0.0123 s/iter. Inference: 0.7078 s/iter. Eval: 0.0324 s/iter. Total: 0.7553 s/iter. ETA=0:03:42
[32m[10/23 19:16:29 d2.evaluation.evaluator]: [39mInference done 269/559. Dataloading: 0.0129 s/iter. Inference: 0.7360 s/iter. Eval: 0.0321 s/iter. Total: 0.7839 s/iter. ETA=0:03:47
[32m[10/23 19:16:34 d2.evaluation.evaluator]: [39mInference done 274/559. Dataloading: 0.0128 s/iter. Inference: 0.7408 s/iter. Eval: 0.0316 s/iter. Total: 0.7881 s/iter. ETA=0:03:44
[32m[10/23 19:16:39 d2.evaluation.evaluator]: [39mInference done 297/559. Dataloading: 0.0119 s/iter. Inference: 0.6996 s/iter. Eval: 0.0291 s/iter. Total: 0.7434 s/iter. ETA=0:03:14
[32m[10/23 19:16:44 d2.evaluation.evaluator]: [39mInference done 320/559. Dataloading: 0.0111 s/iter. Inference: 0.6651 s/iter. Eval: 0.0270 s/iter. Total: 0.7057 s/iter. ETA=0:02:48
[32m[10/23 19:16:49 d2.evaluation.evaluator]: [39mInference done 343/559. Dataloading: 0.0104 s/iter. Inference: 0.6352 s/iter. Eval: 0.0252 s/iter. Total: 0.6731 s/iter. ETA=0:02:25
[32m[10/23 19:16:55 d2.evaluation.evaluator]: [39mInference done 366/559. Dataloading: 0.0098 s/iter. Inference: 0.6087 s/iter. Eval: 0.0236 s/iter. Total: 0.6444 s/iter. ETA=0:02:04
[32m[10/23 19:17:00 d2.evaluation.evaluator]: [39mInference done 389/559. Dataloading: 0.0093 s/iter. Inference: 0.5858 s/iter. Eval: 0.0222 s/iter. Total: 0.6193 s/iter. ETA=0:01:45
[32m[10/23 19:17:05 d2.evaluation.evaluator]: [39mInference done 412/559. Dataloading: 0.0088 s/iter. Inference: 0.5652 s/iter. Eval: 0.0209 s/iter. Total: 0.5970 s/iter. ETA=0:01:27
[32m[10/23 19:17:10 d2.evaluation.evaluator]: [39mInference done 435/559. Dataloading: 0.0084 s/iter. Inference: 0.5471 s/iter. Eval: 0.0198 s/iter. Total: 0.5772 s/iter. ETA=0:01:11
[32m[10/23 19:17:15 d2.evaluation.evaluator]: [39mInference done 458/559. Dataloading: 0.0080 s/iter. Inference: 0.5307 s/iter. Eval: 0.0188 s/iter. Total: 0.5594 s/iter. ETA=0:00:56
[32m[10/23 19:17:21 d2.evaluation.evaluator]: [39mInference done 481/559. Dataloading: 0.0077 s/iter. Inference: 0.5159 s/iter. Eval: 0.0179 s/iter. Total: 0.5432 s/iter. ETA=0:00:42
[32m[10/23 19:17:26 d2.evaluation.evaluator]: [39mInference done 504/559. Dataloading: 0.0074 s/iter. Inference: 0.5025 s/iter. Eval: 0.0171 s/iter. Total: 0.5286 s/iter. ETA=0:00:29
[32m[10/23 19:17:31 d2.evaluation.evaluator]: [39mInference done 527/559. Dataloading: 0.0071 s/iter. Inference: 0.4903 s/iter. Eval: 0.0164 s/iter. Total: 0.5153 s/iter. ETA=0:00:16
[32m[10/23 19:17:36 d2.evaluation.evaluator]: [39mInference done 550/559. Dataloading: 0.0068 s/iter. Inference: 0.4791 s/iter. Eval: 0.0157 s/iter. Total: 0.5031 s/iter. ETA=0:00:04
[32m[10/23 19:17:38 d2.evaluation.evaluator]: [39mTotal inference time: 0:04:36.317641 (0.498768 s / iter per device, on 1 devices)
[32m[10/23 19:17:38 d2.evaluation.evaluator]: [39mTotal inference pure compute time: 0:04:23 (0.474956 s / iter per device, on 1 devices)
[32m[10/23 19:17:38 d2.evaluation.coco_evaluation]: [39mPreparing results for COCO format ...
[32m[10/23 19:17:38 d2.evaluation.coco_evaluation]: [39mSaving results to ./output/coco_instances_results.json
[32m[10/23 19:17:39 d2.evaluation.coco_evaluation]: [39mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.23s)
creating index...
index created!
[32m[10/23 19:17:39 d2.evaluation.fast_eval_api]: [39mEvaluate annotation type *bbox*
[32m[10/23 19:17:39 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.evaluate() finished in 0.21 seconds.
[32m[10/23 19:17:39 d2.evaluation.fast_eval_api]: [39mAccumulating evaluation results...
[32m[10/23 19:17:39 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.accumulate() finished in 0.05 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.035
[32m[10/23 19:17:39 d2.evaluation.coco_evaluation]: [39mEvaluation results for bbox:
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.000 | 0.001  | 0.000  | 0.000 | 0.000 | 0.004 |